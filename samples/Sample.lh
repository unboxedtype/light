contract sample

type State = {
  counter: int;
  sum: int
}

type ActorMessage = {
    n: int
}

let sum a b =
    a + b
;;

(* let add_more (x: int) (st:State) =
   let sum' = sum st.counter x in
   { counter = x; sum = sum' }
;; *)

let accept () =
  assembly { ACCEPT } :> unit;
  ()
;;

let main (msg:ActorMessage) (st:State) = st
;;
